rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // User profiles - anyone can read, only owner can write
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isOwner(userId);
    }

    // User stats - public read for leaderboard, only owner can write
    match /userStats/{userId} {
      allow read: if true;  // Public leaderboard
      allow write: if isOwner(userId);
    }

    // Queue entries - authenticated users can read/write
    match /queue/{entryId} {
      allow read: if isAuth();
      allow create: if isAuth();
      allow delete: if isAuth();
    }

    // Matches - participants can read/write
    match /matches/{matchId} {
      allow read: if isAuth();
      allow create: if isAuth();
      allow update: if isAuth() && (
        request.auth.uid == resource.data.initiator ||
        request.auth.uid == resource.data.receiver
      );
    }

    // WebRTC candidates
    match /offerCandidates/{docId} {
      allow read, write: if isAuth();
    }
    
    match /answerCandidates/{docId} {
      allow read, write: if isAuth();
    }
  }
} 